<?php
require_once("objDBSQL.pclass");
require_once("functions.php");
require_once("objPage.pclass");
/*
getAllResourcesFromVersion
getAllLinksFromVersion
getPageBodyFromVersion *
 */

class objLoadPage// extends objPage
{
    function __construct($version=false)
    {
        _echo('_started');
//        parent::__construct($version);
        $this->db = new objDBSQL();
        _echo('database connected');
        $this->table['page']=0;
        $this->table['link']=1;
        $this->table['text']=2;
        $this->table['image']=3;
        $this->table['css']=4;
        $this->table['txt']=5;
        $this->table['video']=6;
        $this->table['resource']=7;
        $this->table['version']=8;


        if($version == false)
            return;


        $this->version=$version;
        $this->Resource=$this->getAllResourcesFromVersion();
        $n=sizeof($this->Resource);
        if($n==0) {_echo('no page found exit');exit;}
        _echo($n." resources loaded");

        _echo("Loading main page...");
        $this->origPage=$this->getPageBodyFromVersion();

        $this->allLinksFromDB=$this->getAllLinksFromVersion();
        $n=sizeof($this->allLinksFromDB);
        _echo($n. " URL links Loaded");

        $this->allImageLinksFromDB=$this->getAllImageLinksFromVersion();
        $n=sizeof($this->allImageLinksFromDB);
        _echo($n. " Image links Loaded");

        $this->allCssLinksFromDB=$this->getAllCssLinksFromVersion();
        $n=sizeof($this->allCssLinksFromDB);
        _echo($n. " Css links Loaded");
        /*
                _echo("Updating main page's URL links by resource id...");
                $new_page=update_page_links_by_resourceid($this->origPage,$this->allLinksFromDB);

                _echo("Updating main page Image links by resource id...");
                $new_page=update_image_links_by_resourceid($new_page,$this->allImageLinksFromDB);

                _echo("Loading all images to disk");
                $this->loadImageToDisk();
                echo($new_page);



                $this->csslinks=parse_csslink_from_html($this->origPage);

                $this->nonoigPage=$this->getNewPage();
        */
    }
/*
 * tag:
 * 0. load page with updated link/css/images
 * 1. load page with updated css/images
 * 2. load page with no update.
 */
    public function loadPage($tag)
    {
        if($tag==2) return $this->origPage;

        _echo("Updating main page Image links by resource id...");
        $new_page=update_image_links_by_resourceid($this->origPage,$this->allImageLinksFromDB);

        _echo("Loading all images to disk");
        $n=$this->loadImageToDisk();
        _echo($n. " image saved to disk");

//        $css=parse_csslink_from_html($new_page);

        _echo("Updating main page Css links by resource id...");
        $new_page=update_css_links_by_resourceid($new_page,$this->allCssLinksFromDB);

        _echo("Loading all css to disk");
        $n=$this->loadCssToDisk();
        _echo($n. " css saved to disk");


        //loading css here too.
        if($tag==1)
            return $new_page;

        //tag==0
        _echo("Updating main page's URL links by resource id...");
        $new_page=update_page_links_by_resourceid($new_page,$this->allLinksFromDB);
        return $new_page;
    }

    private function loadCssToDisk()
    {
        foreach($this->allCssLinksFromDB as $id=>$value)
        {
            saveMyFile("css/$id",$value[1]);

        }
        return sizeof($this->allCssLinksFromDB);
    }
    private function loadImageToDisk()
    {
        foreach($this->allImageLinksFromDB as $key=>$value)
        {
//            _echo("saving ".$key);
            saveMyFile("image/$key",$value[1]);
        }
        return sizeof($this->allImageLinksFromDB);
        /*
        $this->db->statement="
        SELECT IMAGE_BODY,IMAGELINK_RESOURCE_ID
        FROM IMAGE
        LEFT JOIN IMAGEINDEX ON IMAGEINDEX_IMAGE_ID=IMAGE_ID
        LEFT JOIN IMAGELINK ON
        ";
        */
    }
    function loadMainPage()
    {
    }

    private function getNewPage()
    {
        if($this->origPage==null) return null;


    }
    private function getAllResourcesFromVersion()
    {
        $this->db->statement="
        SELECT RESOURCE_ID,RESOURCE_TYPE FROM RESOURCE WHERE
        RESOURCE_VERSION_ID='$this->version'
        ";
        $this->db->execute();
        $res=array();
        while($r=$this->db->next())
        {
            $id=$r['RESOURCE_ID'];
            $type=$r['RESOURCE_TYPE'];
            $res[$id]=$type;
        }
        return $res;
    }

    private function getAllImageBodyFromVersion()
    {
        $condition=null;
        foreach($this->Resource as $id=>$type)
        {
            if($type==$this->table['image'])
                $condition=$condition."$id,";
        }
        if($condition==null) return null;

        $condition=$condition.'null';
        $this->db->statement="
        SELECT IMAGELINK_RESOURCE_ID,IMAGE_BODY
        FROM IMAGE
        LEFT JOIN IMAGEINDEX ON IMAGEINDEX_IMAGE_ID=IMAGE_ID
        LEFT JOIN IMAGELINK ON IMAGELINK_IMAGE_HASH=IMAGEINDEX_IMAGE_HASH
        WHERE IMAGELINK_RESOURCE_ID IN ($condition)
        ";

        $this->db->execute();
        $ret=array();
        while($r=$this->db->next())
        {
            $id=$r['IMAGELINK_RESOURCE_ID'];
            $body=$r['IMAGE_BODY'];
            $ret[$id]=$body;
        }

        return $ret;
    }
    private function getAllImageLinksFromVersion()
    {
        $condition=null;
        foreach($this->Resource as $id=>$type)
        {
            if($type==$this->table['image'])
                $condition=$condition."$id,";
        }
        if($condition==null) return null;

        $condition=$condition.'null';
        $this->db->statement="
        SELECT IMAGELINK_RESOURCE_ID,IMAGELINK_URL,IMAGE_BODY
        FROM IMAGELINK
        LEFT JOIN IMAGEINDEX ON IMAGEINDEX_IMAGE_HASH=IMAGELINK_IMAGE_HASH
        LEFT JOIN IMAGE ON IMAGE_ID=IMAGEINDEX_IMAGE_ID
        WHERE IMAGELINK_RESOURCE_ID IN ($condition)
        ";

        $this->db->execute();
        $ret=array();
        while($r=$this->db->next())
        {
            $id=$r['IMAGELINK_RESOURCE_ID'];
            $url=$r['IMAGELINK_URL'];
            $body=$r['IMAGE_BODY'];
  //          $hash=$r['IMAGEINDEX_IMAGE_HASH'];
            $ret[$id][]=$url;
            $ret[$id][]=$body;
        }

        return $ret;
    }

    private function getAllCssLinksFromVersion()
    {
        $condition=null;

        foreach($this->Resource as $id=>$type)
        {
            if($type==$this->table['css'])
            {
                if($condition===null)
                    $condition=$condition."$id";
                else
                    $condition=$condition.",$id";
            }
        }

        if($condition==null) return null;

        $this->db->statement="
        SELECT CSSLINK_RESOURCE_ID,CSS_URL,CSS_BODY
        FROM CSSLINK
        WHERE CSSLINK_RESOURCE_ID IN ($condition)
        ";

        $this->db->execute();
        $ret=array();
        while($r=$this->db->next())
        {
            $id=$r['CSSLINK_RESOURCE_ID'];
            $url=$r['CSS_URL'];
            $body=$r['CSS_BODY'];
            $ret[$id][]=$url;
            $ret[$id][]=$body;
        }

        return $ret;
    }

    private function getAllLinksFromVersion()
    {
        $condition=null;
        foreach($this->Resource as $id=>$type)
        {
            if($type==$this->table['link'])
                $condition=$condition."$id,";
        }
        if($condition==null) return null;

        $condition=$condition.'null';
        $this->db->statement="
        SELECT * FROM ALINK
        WHERE ALINK_RESOURCE_ID IN ($condition)
        ";

        $this->db->execute();
        $ret=array();
        while($r=$this->db->next())
        {
            $id=$r['ALINK_RESOURCE_ID'];
            $url=$r['ALINK_URL'];
            $ret[$id]=$url;
        }

        return $ret;
    }

    private function getPageBodyFromVersion()
    {
        $resourceID=-1;
        foreach($this->Resource as $id=>$type)
        {
            if($type==$this->table['page'])
            {
                $resourceID=$id;
                break;
            }
        }

        $this->db->statement="
        SELECT PAGE_BODY FROM PAGE
        LEFT JOIN PAGEINDEX ON PAGEINDEX_PAGE_ID=PAGE_ID
        LEFT JOIN PAGELINK ON PAGELINK_HASH=PAGEINDEX_HASH
        WHERE PAGELINK_RESOURCE_ID='$resourceID';
        ";

        $this->db->execute();
        $page=$this->db->next();
        return $page[0];
    }

    private function getResourceID(objDBSQL $db,$version)
    {
        return true;
    }
    private function getPageidFromResource(objDBSQL $db,$resource)
    {
        return true;
    }
    private function getPageBodyFromResourceId($resourceID)
    {
        $this->db->statement="
        SELECT PAGE_BODY
        FROM PAGE
        LEFT JOIN PAGEINDEX ON PAGE_ID=PAGEINDEX_PAGEID
        LEFT JOIN PAGELINK ON PAGEINDEX_HASH=PAGE_RESOURCE_HASH
        WHERE PAGELINK_RESOURCE_ID='$resourceID';
        ";
        $this->db->execute();
        $page=$this->db->next();
        return $page[0];

    }

}
